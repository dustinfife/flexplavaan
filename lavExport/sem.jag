model {
  for(i in 1:N) {
    V1[i] ~ dnorm(mu[i,1], 1/theta[1,1,g[i]])
    V2[i] ~ dnorm(mu[i,2], 1/theta[2,2,g[i]])
    V3[i] ~ dnorm(mu[i,3], 1/theta[3,3,g[i]])

    # lvs
    eta[i,1] ~ dnorm(mu_eta[i,1], 1/psi[1,1,g[i]])
  }

  # mu definitions
  for(i in 1:N) {
    mu[i,1] <- (max[1,1,1]*(eta[i,1]))/(midpoint[1,1,1] + eta[i,1])
    mu[i,2] <- (max[2,1,1]*(eta[i,1]))/(midpoint[2,1,1] + eta[i,1])
    mu[i,3] <- (max[3,1,1]*(eta[i,1]))/(midpoint[3,1,1] + eta[i,1])

    mu_eta[i,1] <- alpha[1,1,g[i]]
  }

  # Assignments from parameter vector & equality constraints
  max[1,1,1] <- parvec[1]
  max[2,1,1] <- parvec[2]
  max[3,1,1] <- parvec[3]
  theta[1,1,1] <- pow(parvec[4],2)
  theta[2,2,1] <- pow(parvec[5],2)
  theta[3,3,1] <- pow(parvec[6],2)
  psi[1,1,1] <- pow(parvec[7],2)
  midpoint[1,1,1] <- parvec[8]
  midpoint[2,1,1] <- parvec[9]
  midpoint[3,1,1] <- parvec[10]
  alpha[1,1,1] <- 0
  # Priors
  parvec[1] ~ dunif(1,10)
  parvec[2] ~ dunif(1,10)
  parvec[3] ~ dunif(1,10)
  parvec[4] ~ dgamma(1,.5)
  parvec[5] ~ dgamma(1,.5)
  parvec[6] ~ dgamma(1,.5)
  parvec[7] ~ dgamma(1,.5)
  parvec[8] ~ dunif(1,10)
  parvec[9] ~ dunif(1,10)
  parvec[10] ~ dunif(1,10)
  

}
